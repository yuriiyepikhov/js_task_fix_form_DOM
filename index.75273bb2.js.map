{"mappings":"ACIA,IAAM,EAAS,SAAS,gBAAgB,CAAC,SAEzC,SAAS,EAAqB,CAAM,EAIlC,IAAK,IAFD,EAAoB,GAEf,EAAI,EAAG,EAAI,EAAO,MAAM,CAAE,IAC7B,AAAM,IAAN,EACF,GAAqB,CAAM,CAAC,EAAE,CAAC,WAAW,GACjC,AANM,6BAMK,QAAQ,CAAC,CAAM,CAAC,EAAE,EACtC,GAAqB,IAAM,CAAM,CAAC,EAAE,CAEpC,GAAqB,CAAM,CAAC,EAAE,CAIlC,OAAO,CACT,CAEK,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IAAM,EAAN,EAAA,KAAA,CACG,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAClC,EAAM,WAAW,CAAG,EAAqB,EAAM,IAAI,EAAE,WAAW,GAEhE,IAAM,EAAkB,EAAqB,EAAM,IAAI,EAEvD,EAAM,YAAY,CAAC,cAAe,GAClC,EAAM,MAAM,CAAC,EACf,C,C,M,E,CAXK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar inputs = document.querySelectorAll(\"input\");\nfunction getCapitalizedPhrase(phrase) {\n    var bigLetters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var capitalizedPhrase = \"\";\n    for(var i = 0; i < phrase.length; i++){\n        if (i === 0) capitalizedPhrase += phrase[i].toUpperCase();\n        else if (bigLetters.includes(phrase[i])) capitalizedPhrase += \" \" + phrase[i];\n        else capitalizedPhrase += phrase[i];\n    }\n    return capitalizedPhrase;\n}\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var label = document.createElement(\"label\");\n        label.classList.add(\"field-label\");\n        label.setAttribute(\"for\", input.id);\n        label.textContent = getCapitalizedPhrase(input.name).toUpperCase();\n        var placeholderText = getCapitalizedPhrase(input.name);\n        input.setAttribute(\"placeholder\", placeholderText);\n        input.before(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.75273bb2.js.map\n","'use strict';\n\n// write code here\n\nconst inputs = document.querySelectorAll('input');\n\nfunction getCapitalizedPhrase(phrase) {\n  const bigLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let capitalizedPhrase = '';\n\n  for (let i = 0; i < phrase.length; i++) {\n    if (i === 0) {\n      capitalizedPhrase += phrase[i].toUpperCase();\n    } else if (bigLetters.includes(phrase[i])) {\n      capitalizedPhrase += ' ' + phrase[i];\n    } else {\n      capitalizedPhrase += phrase[i];\n    }\n  }\n\n  return capitalizedPhrase;\n}\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.classList.add('field-label');\n  label.setAttribute('for', input.id);\n  label.textContent = getCapitalizedPhrase(input.name).toUpperCase();\n\n  const placeholderText = getCapitalizedPhrase(input.name);\n\n  input.setAttribute('placeholder', placeholderText);\n  input.before(label);\n}\n"],"names":["inputs","document","querySelectorAll","getCapitalizedPhrase","phrase","capitalizedPhrase","i","length","toUpperCase","bigLetters","includes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","label","createElement","classList","add","setAttribute","id","textContent","name","placeholderText","before","err","return"],"version":3,"file":"index.75273bb2.js.map"}